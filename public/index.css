:root {
	--theme: hsl(120, 57.1%, 16%);
	--background: hsl(0, 7.4%, 50%);
	--yellow: hsl(41.8, 79.8%, 39%);
	--green: hsl(120.4, 89.6%, 30%);
	--blue: hsl(240.3, 98.9%, 35%);
}

*,
*::before,
*::after {
	box-sizing: border-box;
}

@font-face {
	font-family: 'et-book';
	src: url('/assets/et-book/etbookot-roman.woff2') format('woff');
	font-weight: normal;
	font-style: normal;
}

@font-face {
	font-family: 'et-book';
	src: url('/assets/et-book/etbookot-italic.woff2') format('woff');
	font-weight: normal;
	font-style: italic;
}

@font-face {
	font-family: 'et-book';
	src: url('/assets/et-book/etbookot-bold.woff2') format('woff');
	font-weight: bold;
	font-style: normal;
}

html {
	background: var(--background);
	background: var(--background) url(./assets/bg.jpg);
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
	font-size: 18px;
	line-height: 1.4;
	color: whitesmoke;
}

body {
	margin: 1rem;
	overflow: hidden;
	/* background:hsla(0, 0%, 6%, 0.8); */
}

html,
button,
input {
	font-family: 'et-book', serif;
}

#root,
.Game {
	min-height: calc(100vh - 2rem);
	outline: none;
}

.Game {
	display: grid;
	grid-template-columns: 1fr 4fr 1fr;
	grid-template-rows: auto 1fr 6rem;
}

.Header {
	position: absolute;
	top: 1rem;
	left: 1rem;
	grid-row: 1;
	grid-column: 1 / 3;
}
.PartyGroup,
.Player {
	width: 100%;
	max-width: 20rem;
	margin-left: auto;
	margin-right: auto;
}
.PartyGroup {
	grid-row: 2;
	grid-column: 2/3;
	display: flex;
	flex-flow: column;
}
.Player {
	grid-row: 2;
	grid-column: 2/3;
	align-self: flex-end;
	margin-bottom: 4vh;
}
.ActionBar {
	grid-row: 3;
	grid-column: 1 / 6;
	display: inline-flex;
	gap: 5px;
	justify-content: center;
}
.Monitor {
	position: fixed;
	top: 0;
	right: 0;
	width: 6rem;
	font-size: 15px;
	background: #111;
	color: #eaeaea;
	margin: 0;
	padding: 0.5em;
	display: flex;
	flex-flow: column nowrap;
	list-style: none;
}
@media (max-width: 40em) {
	.Monitor {
	}
	.Monitor li {
		display: none;
	}
	.Monitor li:first-child,
	.Monitor li:nth-child(3) {
		display: initial;
	}
}
@media (min-width: 40em) {
	.Monitor {
		display: initial;
	}
	.PartyGroup {
		grid-row: 1/2;
	}
}

h1 {
	margin-top: 0;
	margin-bottom: 0;
	font-size: 2rem;
	line-height: 1.2;
	font-weight: 600;
}

header p {
	margin-top: 0;
	margin-left: 0.1em;
}

h2 {
	font-size: 1.5rem;
	line-height: 1.2;
	font-weight: 600;
	font-style: italic;
}

a {
	color: var(--theme);
}

input[type='text'] {
	font-size: 1em;
}

.Spell {
	--radius: 8px;
	position: relative;
	font-size: 1em;
	flex-basis: 7rem;
	border-radius: var(--radius);
	border: 2px outset hsl(0, 0%, 86%);
	border-right-color: hsl(0, 0%, 70%);
	border-bottom-color: hsl(0, 0%, 35%);
	border-left-color: hsl(0, 0%, 73%);
	/* background: hsl(120, 40%, 14%); */
	background: conic-gradient(hsl(60, 7%, 10%) 25%, hsl(20, 5%, 15%));
	/* background: conic-gradient(hsl(60, 38%, 48%) 30%, hsl(60, 38%, 41%)); */
	background-repeat: no-repeat;
	background-size: cover;
	box-shadow: 0 1px 4px hsla(0, 0%, 10%, 0.5);
	color: whitesmoke;
	text-shadow: 0 0 2px black, 0 0 2px black, 0 0 3px black, 0 0 3px black, 0 0 1px black,
		0 0 1px black;
}
.Spell:hover {
	/* background: hsl(120, 40%, 16%); */
	/* background: linear-gradient(hsl(60, 7%, 13%) 25%, hsl(20, 5%, 20%)); */
	/* background: linear-gradient(hsl(170, 35%, 55%) 20%, hsl(170, 30%, 20%)); */
	background: conic-gradient(hsl(60, 7%, 15%) 25%, hsl(20, 5%, 20%));
}
.Spell:hover .Spell-gcd {
	border-color: var(--yellow);
}
.Spell:active .Spell-gcd {
	border-color: initial;
}
.Spell-inner {
	font-size: 0.875rem;
	position: relative;
	z-index: 2;
}
.Spell-gcd {
	--color: rgba(200, 220, 270, 1);
	/* --progress: calc(35 / 100 * 360deg); */
	position: absolute;
	top: 0px;
	right: 0px;
	bottom: 0px;
	left: 0px;
	z-index: 1;
	pointer-events: none;
	display: inline-block;
	border-radius: var(--radius);
	border: 2px groove hsla(0, 0%, 100%, 0.7);
}
.Spell-gcd::before {
	display: block;
	content: '';
	width: 100%;
	height: 100%;
	border-radius: var(--radius);
	border: 1px solid hsla(0, 0%, 0%, 0.8);
	background: conic-gradient(
		hsla(0 0% 90% / 0.2) var(--progress),
		transparent var(--progress)
	);
}
.Spell-shortcut {
	position: absolute;
	top: 0.3em;
	left: 0.5em;
}

.Bar {
	--health: var(--green);
	--health-bg: pink;
	--mana: var(--blue);
	--mana-bg: lightblue;
	--radius: 4px;

	display: flex;
	position: relative;
	background: hsla(0, 0%, 30%, 0.2);
	border-radius: var(--radius);
	border: 1px solid hsla(0, 0%, 0%, 0.8);
}
.Bar div {
	min-height: 1.5em;
	border-radius: var(--radius);
	background: var(--theme);
	border-top: 1px solid hsla(0 0% 90% / 0.6);
	border-right: 1px solid hsla(0 0% 10% / 0.6);
	/* transition: width 600ms; */
}
div.Bar-potentialValue {
	position: absolute;
	top: 0;
	background: var(--theme);
	opacity: 0.4;
}
.Bar span {
	position: absolute;
	right: 0.4rem;
	top: 50%;
	transform: translateY(-50%);
	text-align: right;
	/* avoid jumps because no monospace */
	min-width: 8em;
	color: whitesmoke;
	text-shadow: 0 0 2px black, 0 0 2px black, 0 0 3px black, 0 0 3px black, 0 0 1px black,
		0 0 1px black;
}
.Bar span[hidden] {
	visibility: hidden;
	height: 0;
}

[data-type='health'] {
	--theme: var(--green);
}
[data-type='mana'] {
	--theme: var(--blue);
}
[data-type='cd'] {
	--theme: rgb(from var(--yellow) r g b / 0.8);
}
[data-type='cast'] {
	--theme: var(--yellow);
	max-width: 15rem;
}

.Bar[data-type='cast'] div {
	min-height: 0.5rem;
}

[hidden] {
	display: none;
}

/* Used to animate a number. It pops in and then fades up and away */
.FCT {
	position: absolute;
	display: inline-block;
	margin-left: auto;
	font-size: 4rem;
	animation: fct-up 3s cubic-bezier(0.23, 1, 0.32, 1);
	animation-fill-mode: both;
	transform-origin: center;
	text-shadow: 0.1rem 0.1rem 0px rgba(0, 0, 0, 0.5);
}
.FCT--block {
	color: #afafff;
	font-size: 3rem;
}
@keyframes fct-up {
	0% {
		transform: scale(0) translateY(0%);
		opacity: 0;
	}
	10% {
		opacity: 1;
		transform: scale(1) translateY(-50%);
	}
	100% {
		transform: translateY(-100%) rotateZ(15deg);
		opacity: 0;
	}
}

.Effects {
	display: flex;
}
.Effects > * {
	min-height: 4rem;
	flex-basis: 4rem;
	display: flex;
	place-content: center;
	place-items: center;
	background: var(--yellow);
}

.spin {
	display: inline-block;
	transform-origin: center;
	animation: spin 1s linear infinite;
}
@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}
